[{"C:\\Projects\\react\\playground-ts\\src\\index.tsx":"1","C:\\Projects\\react\\playground-ts\\src\\reportWebVitals.ts":"2","C:\\Projects\\react\\playground-ts\\src\\App.tsx":"3","C:\\Projects\\react\\playground-ts\\src\\examples\\dispatcher\\DispatcherExample.tsx":"4","C:\\Projects\\react\\playground-ts\\src\\examples\\dispatcher\\Child.tsx":"5","C:\\Projects\\react\\playground-ts\\src\\examples\\dispatcher\\Dispatch.tsx":"6","C:\\Projects\\react\\playground-ts\\src\\examples\\dispatcher\\GrandChild.tsx":"7","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\ExampleUseEffect.tsx":"8","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectArray.tsx":"9","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectEmpty.tsx":"10","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectString.tsx":"11","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectNumber.tsx":"12","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectObject.tsx":"13","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectObjectMembers.tsx":"14","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectObjectUpdated.tsx":"15","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectSameMethod.tsx":"16","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectDifferentMethod.tsx":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":2655,"mtime":1609751790764,"results":"21","hashOfConfig":"19"},{"size":1427,"mtime":1609711655064,"results":"22","hashOfConfig":"19"},{"size":863,"mtime":1609711655047,"results":"23","hashOfConfig":"19"},{"size":1605,"mtime":1609519082571,"results":"24","hashOfConfig":"19"},{"size":457,"mtime":1609711655059,"results":"25","hashOfConfig":"19"},{"size":1336,"mtime":1609716000978,"results":"26","hashOfConfig":"19"},{"size":958,"mtime":1609715340528,"results":"27","hashOfConfig":"19"},{"size":948,"mtime":1609715357148,"results":"28","hashOfConfig":"19"},{"size":1205,"mtime":1609715340533,"results":"29","hashOfConfig":"19"},{"size":1211,"mtime":1609715340519,"results":"30","hashOfConfig":"19"},{"size":1977,"mtime":1609715340537,"results":"31","hashOfConfig":"19"},{"size":2020,"mtime":1609715340523,"results":"32","hashOfConfig":"19"},{"size":2059,"mtime":1609715340514,"results":"33","hashOfConfig":"19"},{"size":1276,"mtime":1609715853547,"results":"34","hashOfConfig":"19"},{"size":1383,"mtime":1609715917880,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1rxvhug",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"C:\\Projects\\react\\playground-ts\\src\\index.tsx",[],["75","76"],"C:\\Projects\\react\\playground-ts\\src\\reportWebVitals.ts",[],"C:\\Projects\\react\\playground-ts\\src\\App.tsx",["77","78","79","80"],"C:\\Projects\\react\\playground-ts\\src\\examples\\dispatcher\\DispatcherExample.tsx",[],"C:\\Projects\\react\\playground-ts\\src\\examples\\dispatcher\\Child.tsx",[],"C:\\Projects\\react\\playground-ts\\src\\examples\\dispatcher\\Dispatch.tsx",[],"C:\\Projects\\react\\playground-ts\\src\\examples\\dispatcher\\GrandChild.tsx",["81"],"import React from \"react\";\r\nimport {Dispatch, DispatchEvent} from \"./Dispatch\";\r\nimport {Child} from \"./Child\";\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nexport const GrandChild: React.FC = () => {\r\n    const dispatch = () => {\r\n        Dispatch.dispatch(new DispatchEvent('test'));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={dispatch}>Dispatch Grandchild Event</Button>\r\n        </>\r\n    );\r\n}","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\ExampleUseEffect.tsx",[],"C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectArray.tsx",[],"C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectEmpty.tsx",["82"],"import React, {useEffect, useState} from \"react\";\r\nimport {Button, Typography} from \"@material-ui/core\";\r\n\r\ninterface Params {\r\n    id: number;\r\n}\r\n\r\nconst Child: React.FC<Params> = (params) => {\r\n    const [count, setCount] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        setCount((prev) => prev + 1);\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Typography variant={'subtitle1'}>\r\n                Count: {count}\r\n            </Typography>\r\n        </>\r\n    );\r\n}\r\n\r\nexport const UseEffectEmpty: React.FC = () => {\r\n    const [count, setCount] = useState<number>(0);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant={'h5'}>\r\n                UseEffect - Empty\r\n            </Typography>\r\n            <Button\r\n                variant={'contained'}\r\n                onClick={() => setCount((prev) => prev + 1)}\r\n            >Change Params (Current: {count})</Button>\r\n            <Child id={count}/>\r\n        </>\r\n    );\r\n}","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectString.tsx",[],"C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectNumber.tsx",[],"C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectObject.tsx",[],"C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectObjectMembers.tsx",[],"C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectObjectUpdated.tsx",[],"C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectSameMethod.tsx",["83","84"],"import React, {useEffect, useState} from \"react\";\r\nimport {Box, Button, Input, Typography} from \"@material-ui/core\";\r\n\r\ninterface Params {\r\n    callback: () => void;\r\n}\r\n\r\nconst Child: React.FC<Params> = (params) => {\r\n    const {callback} = params;\r\n    const [count, setCount] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        setCount((prev) => prev + 1);\r\n    }, [callback]);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant={'subtitle1'}>\r\n                Count: {count}\r\n            </Typography>\r\n        </>\r\n    );\r\n}\r\n\r\nexport const UseEffectSameMethod: React.FC = () => {\r\n    const method = () => {\r\n        setText('updated text');\r\n    };\r\n\r\n    const [text, setText] = useState<string>('original text');\r\n    const [callback, setCallback] = useState<() => void>(method);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant={'h5'}>\r\n                UseEffect - Same Method\r\n            </Typography>\r\n            <Typography variant={'caption'}>\r\n                Callback called text: {text}\r\n            </Typography>\r\n            <Button\r\n                variant={'contained'}\r\n                onClick={() => setCallback(method)}\r\n            >Update Method</Button>\r\n            <Child callback={callback}/>\r\n        </>\r\n    );\r\n}","C:\\Projects\\react\\playground-ts\\src\\examples\\useEffect\\UseEffectDifferentMethod.tsx",["85","86"],"import React, {useEffect, useState} from \"react\";\r\nimport {Box, Button, Input, Typography} from \"@material-ui/core\";\r\n\r\ninterface Params {\r\n    callback: () => void;\r\n}\r\n\r\nconst Child: React.FC<Params> = (params) => {\r\n    const {callback} = params;\r\n    const [count, setCount] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        setCount((prev) => prev + 1);\r\n    }, [callback]);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant={'subtitle1'}>\r\n                Count: {count}\r\n            </Typography>\r\n        </>\r\n    );\r\n}\r\n\r\nexport const UseEffectDifferentMethod: React.FC = () => {\r\n    const method = () => {\r\n        setText('updated text');\r\n    };\r\n\r\n    const secondMethod = () => {\r\n        setText('updated second method text');\r\n    }\r\n\r\n    const [text, setText] = useState<string>('original text');\r\n    const [callback, setCallback] = useState<() => void>(method);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant={'h5'}>\r\n                UseEffect - Different Method\r\n            </Typography>\r\n            <Typography variant={'caption'}>\r\n                Callback called text: {text}\r\n            </Typography>\r\n            <Button\r\n                variant={'contained'}\r\n                onClick={() => setCallback(secondMethod)}\r\n            >Change Method</Button>\r\n            <Child callback={callback}/>\r\n        </>\r\n    );\r\n}",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":8,"column":5,"nodeType":"93","messageId":"94","endLine":8,"endColumn":14},{"ruleId":"91","severity":1,"message":"95","line":10,"column":5,"nodeType":"93","messageId":"94","endLine":10,"endColumn":9},{"ruleId":"91","severity":1,"message":"96","line":11,"column":5,"nodeType":"93","messageId":"94","endLine":11,"endColumn":15},{"ruleId":"91","severity":1,"message":"97","line":12,"column":23,"nodeType":"93","messageId":"94","endLine":12,"endColumn":32},{"ruleId":"91","severity":1,"message":"98","line":3,"column":9,"nodeType":"93","messageId":"94","endLine":3,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":11,"column":5,"nodeType":"93","endLine":11,"endColumn":14,"suggestions":"101"},{"ruleId":"91","severity":1,"message":"102","line":2,"column":9,"nodeType":"93","messageId":"94","endLine":2,"endColumn":12},{"ruleId":"91","severity":1,"message":"103","line":2,"column":22,"nodeType":"93","messageId":"94","endLine":2,"endColumn":27},{"ruleId":"91","severity":1,"message":"102","line":2,"column":9,"nodeType":"93","messageId":"94","endLine":2,"endColumn":12},{"ruleId":"91","severity":1,"message":"103","line":2,"column":22,"nodeType":"93","messageId":"94","endLine":2,"endColumn":27},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"@typescript-eslint/no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Grid' is defined but never used.","'makeStyles' is defined but never used.","'PropTypes' is defined but never used.","'Child' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setCount'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["106"],"'Box' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Add dependencies array: []",{"range":"109","text":"110"},[318,318],", []"]